X Xth 2009
------------------

MICA v0.3

- increases flexibility of itypes analysis significantly
        - instruction groups used in itypes analysis can be specified by the user now,
          using a itypes.spec file; specify the filename in mica.conf using an entry like:
                itypes_spec_file: <filename>
        - by default, the old instruction groups are used


September 22th 2009
-------------------

MICA v0.23

Several people have reported small problems when MICA is being used with
recent Pin kits. This small patch release should resolve these issues.

- bug fixes:
        * adjusted makefile and README according to Pin kit directory tree changes
        * adjust mica_itypes.cpp to recognize both NOP and WIDENOP categories


June 13th 2008
--------------

MICA v0.22

- bug fixes in itypes:
	* fixed issue with instructions in MISC category being counted double (both in 'control flow' and 'other' buckets)
	  (thanks to Ahmed S. Al-Zawawi for bringing my attention to this issue)
	* added NOP instructions category
- adjusted README file to make meaning of different buckets in memreusedist more clear 
  (thanks to Kshitij Sudan for reporting this)

May 20th 2008
--------------

MICA v0.21

- removed -static from makefile, to avoid issues when linking MICA
  (thanks to J. K. Rai and Ahmed S. Al-Zawawi for reporting this)

Dec. 3rd 2007
--------------

MICA v0.2:

- various bug fixes, including:
 	* reg: include non-full-width registers
	* ilp: not all registers were included in analysis (stopped after first non-valid register)
	* stride: fixed faulty use of readIndex/writeIndex in readMem/writeMem
	* reset interval_ins_count for all characteristics
- added features:
	* taking size of memory read/write into account
	* implementation of memreusedist characteristics, useful for characterizing cache behavior
- adjusted:
	* memory footprint measured for 64-byte blocks instead of 32-byte blocks (because most modern processors have 64-byte cache blocks)
	* configuring MICA is done using a mica.conf configuration file instead of command line parameters
- speed:
	* used InsertIfCall/InsertThenCall to make more analysis routines inlineable
	* buffering for ilp implementation, which yields roughly 10% speedup

Sept. 29th 2007
---------------

Initial release: MICA v0.1
